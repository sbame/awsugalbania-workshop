version: 2
jobs:
  deploys3:
    docker:
      - image: circleci/python:3.7-stretch
    working_directory: /tmp/www
    steps:
      - checkout
      - run:
          name: Installing awscli..
          command: sudo pip install awscli
      - run:
          name: Creating CloudFormation Stack..
          command: |
            echo "Checking if stack exists ..." && \
            if ! aws cloudformation describe-stacks --stack-name aws-ug-albania-s3; then
              echo -e "\nStack does not exist, creating ..." && \
              aws cloudformation create-stack --stack-name aws-ug-albania-s3 --template-body file:///tmp/www/cloudformation/s3.yml && \
              echo "Waiting for stack to be created ..." && \
              aws cloudformation wait stack-create-complete --stack-name aws-ug-albania-s3
            fi
      - run:
          name: Building Angular App!
          command: |
            git clone https://github.com/ecukalla/aws-eb-workshop-angular.git
            cd aws-eb-workshop-angular
            curl -sL https://deb.nodesource.com/setup_10.x | sudo bash - 
            sudo apt install nodejs -y > /dev/null
            sudo npm install -g @angular/cli > /dev/null
            sudo npm install --save-dev @angular-devkit/build-angular > /dev/null
            ng build --prod
      - run:
          name: Deploying master branch to S3!
          command: |
            # if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync /tmp/www/aws-eb-workshop-angular/dist/angular-new s3://aws-ug-albania-s3/ --delete
            # fi 
  deployec2:
    docker:
      - image: circleci/python:3.7-stretch
    working_directory: /tmp/www
    steps:
      - checkout
      - run:
          name: Installing awscli..
          command: sudo pip install awscli
      - run:
          name: Spinning up EC2..
          command: |
            echo "Checking if stack exists ..." && \
            if ! aws cloudformation describe-stacks --stack-name aws-ug-albania-ec2; then
              echo -e "\nStack does not exist, creating ..." && \
              aws cloudformation create-stack --stack-name aws-ug-albania-ec2 --template-body file:///tmp/www/cloudformation/ec2.yml && \
              echo "Waiting for stack to be created ..." && \
              aws cloudformation wait stack-create-complete --stack-name aws-ug-albania-ec2
            fi
  deployebs:
    docker:
      - image: circleci/python:3.7-stretch
    working_directory: /tmp/www
    steps:
      - checkout
      - run:
          name: Installing awscli..
          command: sudo pip install awscli
      # - run:
      #     name: Installing ebcli..
      #     command: sudo pip install awsebcli
      - run:
          name: Creating an S3 and upload thecode as zip..
          command: |
            echo "Checking if stack exists ..." && \
            if ! aws cloudformation describe-stacks --stack-name aws-ug-albania-zips; then
              echo -e "\nStack does not exist, creating ..." && \
              aws cloudformation create-stack --stack-name aws-ug-albania-zips --template-body file:///tmp/www/cloudformation/simple-s3.yml && \
              echo "Waiting for stack to be created ..." && \
              aws cloudformation wait stack-create-complete --stack-name aws-ug-albania-zips
            fi
            git clone https://github.com/ecukalla/aws-eb-workshop-flask.git
            cd aws-eb-workshop-flask
            zip flask.zip application.py requirements.txt
            aws s3 sync /tmp/www/aws-eb-workshop-flask/ s3://aws-ug-albania-zips/ --delete
      - run:
          name: Spinning up ElasticBeanstalk..
          command: |
            echo "Checking if stack exists ..." && \
            if ! aws cloudformation describe-stacks --stack-name aws-ug-albania-eb; then
              echo -e "\nStack does not exist, creating ..." && \
              aws cloudformation create-stack --stack-name aws-ug-albania-eb --template-body file:///tmp/www/cloudformation/eb.yml && \
              echo "Waiting for stack to be created ..." && \
              aws cloudformation wait stack-create-complete --stack-name aws-ug-albania-eb
            fi
workflows:
  version: 2
  build:
    jobs:
      - deploys3:
          filters:
            branches:
              only: branch
      - deployec2:
          filters:
            branches:
              only: cleanups
      - deployebs:
          filters:
            branches:
              only: branch